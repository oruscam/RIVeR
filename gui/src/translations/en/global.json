{
    "MainPage" : {
        "start": "Start",
        "loadProject": "Load Project",
        "spanish" : "Spanish",
        "english" : "English"
    },
    "Step-2" : {
        "title" : "Select the kind of footage"
    },
    "Wizard" : {
        "back" : "Back",
        "next" : "Next",
        "save" : "Save HTML"
    },
    "VideoRange":{
        "title": "Video Range",
        "start": "Start",
        "end": "End",
        "step": "Step",
        "Errors": {
            "start1": "Invalid Time Selection: The Start time cannot be less than 0. Please enter a valid value.",
            "end1": "Invalid Time Selection:  The 'End' value cannot be larger than the total length of the video. Please enter a valid value.",
            "end2" : "Invalid Time Selection: The 'End' value cannot be 0 or less. Please enter a valid value.",
            "end3" : "Invalid Time Selection:  The 'End' value cannot be equal or less than 'Start' value. Please enter a valid value.",
            "step" : "Invalid Step Selection: The 'Step' parameter must be a integer greater than 1. Please enter a valid value.",
            "required" : "All the fields are obligatory. Please check video range form.",
            "formatInput" : "Incorrect format. 'Start' and 'End' values must be in '00:00' format."
        },
        "ExtraInfo" : {
            "fileName" : "File Name:",
            "totalLength": "Total Length: ",
            "timeBetweenFrame" : "Time Between Frames: ",
            "resolution" : "Resolution: ",
            "numberOfFrames": "Number of Frames: "
        }
    },
    "PixelSize": {
        "title": "Pixel Size",
        "lineLength": "Line Length",
        "pixelSize": "Pixel Size",  
        "drawLine": "Draw Line",
        "Errors": {
            "required": "All the fields are obligatory. Please check Pixel Size form.",
            "lineLength" : "Invalid Line Length: The line length must be a positive number, which can include decimals. Please enter a valid value.",
            "pixelSize": "Invalid Pixel Size: The pixel size must be a positive number, which can include decimals. Please enter a valid value."
        },
        "RealWorld": {
            "title": "Real World Coordinates",
            "eastPoint1": "East Point 1",
            "eastPoint2": "East Point 2",
            "northPoint1": "North Point 1",
            "northPoint2": "North Point 2"
        }, 
        "Pixel": {
            "title": "Pixel Coordinates",
            "xPoint1": "X Point 1",
            "xPoint2": "X Point 2",
            "yPoint1": "Y Point 1",
            "yPoint2": "Y Point 2"
        }
    },
    "CrossSections": {
        "title": "Cross Sections",
        "drawLine": "Draw Direction",
        "width": "Width",
        "importBath": "Import bath",
        "level" : "Level",
        "leftBankStation": "Left Bank Station",
        "RealWorld": {
            "title": "Real World Coordinates",
            "eastPoint1": "East Left",
            "northPoint1": "North Left",
            "eastPoint2": "East Right",
            "northPoint2": "North Right"
        }, 
        "Pixel" : {
            "title": "Pixel Coordinates",
            "xPoint1": "X Left",
            "yPoint1": "Y Left",
            "xPoint2": "X Right",
            "yPoint2": "Y Right"
        }, 
        "Errors" : {
            "levelError": "Level must be between {{yMin}} and {{yMax}}",
            "leftBank": "Left bank is out of range",
            "bathimetryNotValid": "The bathimetry is not valid. Level {{level}} do not exist in this file"
        }
    },
    "Processing": {
        "title": "Processing",
        "artificialSeeding": "Artificial Seeding",
        "windowSizes": "Windows Sizes",
        "step1": "Step 1",
        "step2": "Step 2",
        "test" : "Test",
        "roiHeight": "ROI Height",
        "preProcessingFilter": "Pre-processing filtering",
        "grayscale": "Grayscale",
        "removeBackground" : "Remove Background",
        "clahe": "CLAHE",
        "clipLimit": "Clip Limit",
        "postProcessingFilter": "Post-processing filtering",
        "stdFiltering": "Std filtering",
        "medianTestFiltering" : "Mediant test filtering",
        "epsilon": "Epsilon",
        "threshold": "Threshold",
        "carouselMedia": "Median",
        "Plot": {
            "u" : "U Component",
            "v" : "V Component"
        }
    },
    "Analizing": {
        "title": "Analizing",
        "analize": "Analize",
        "stop": "Stop"
    },
    "Results": {
        "title": "Results",
        "measured": "Measured",
        "interpolated": "Interpolated",
        "alpha": "Alpha",
        "stationNumber" : "Station Number",
        "showVelStd" : "Show Vel. Std",
        "showProfile": "Show 5% | 95% percen",
        "interpolateProfile": "Interpolate Profile"
    },
    "Graphs": {
        "station": "Station",
        "velocity": "Velocity",
        "discharge": "Discharge",
        "level": "Level"
    },
    "Report": {
        "totalQ": "Total Q",
        "discahrgeQ": "Discharge Q",
        "VideoInfo": {
            "title": "Video Information",
            "name": "Name",
            "duration": "Duration",
            "resolution": "Resolution",
            "fps": "fps",
            "creationDate": "Creation Date"
        },
        "ProcessedRange": {
            "title": "Processed Range",
            "start": "Start",
            "end": "End",
            "length" : "Length",
            "step": "Step",
            "timeStep": "Time Step"
        },
        "Summary": {
            "title": "Summary",
            "width": "Width",
            "area": "Area",
            "q": "Q",
            "meanV": "meanV",
            "alpha": "Alpha",
            "averageVs": "Average Vs",
            "maxD": "Max d",
            "meanD": "Mean d",
            "measured": "% Measured"
        },
        "pixelTransformation": "Pixel Transformation",
        "processingParameters" : "Processing Parameters",
        "generatedBy" : "Generated with River",
        "date" : "report creation date",
        "Success" : {
            "title": "Analysis Complete!",
            "message": "You've successfully completed all steps. Review your results and save them as HTML. You can close the window your project has been saved in"
        }
    },
    "ControlPoints" : {
        "Errors": {
            "required" : "All the distances fields are obligatory. Please check Control Points form",
            "notNull": "All the distances fields must be greater than 0. Please check Control Points form",
            "notZero": "All the distances fields must be different from 0. Please check Control Points form",
            "positive" : "All the distances fields must be positive. Please check Control Points form"
        }
    },
    "Errors": {
        "invalidPointsFileFormat": "Invalid Points file format.",
        "invalidDistancesFileFormat" : "Invalid Points Distances format",
        "invalidDistancesNotValidValue" : "Invalid Points Distances format. Some distance values are not valid numbers",
        "invalidDistancesNegativeValue": "Invalid Points Distances format. Negative distances are not allowed",
        "invalidBathimetryFileFormat" : "Invalid Bathimetry file format",
        "invalidImageExtension": "The directory contains files that are not images",
        "imagesFolderEmpty" : "No images found in the selected folder",
        "Cli": {
            "windowsSizesError" : "The window size is too large for the selected Region Of Interest.",
            "bboxNotDefined" : "Region of Interest not defined."
        }
    },
    "Loader": {
        "frames" : "Extracting Video Frames",
        "results" : "Generating velocity profile statistics",
        "videoConversion" : "We are converting the video to mp4 format. Please wait a moment."
    },
    "Ipcam": {
        "east" : "East",
        "north" : "North"
    }
}